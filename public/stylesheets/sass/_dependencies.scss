/* Colour Palette */

$yellowBase:						rgb(244, 180, 0);

/*$yellowBase:						rgb(64, 102, 24);*/

$greyBase:							rgb(42, 42, 42);

$whiteBase:							rgb(255, 255, 255);
$whiteOff:							darken($whiteBase, 5%);
$whiteDark:							darken($whiteBase, 15%);

$greenBase:							rgba(141, 198, 63, 1);

$redBase:							rgba(218, 2, 10, 1);



$greyLight:							rgba(238, 238, 238, 1);
$greyDark:							darken($greyBase, 10%);

/* Fonts */

@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,600);

$baseFontSize:						14px;


$openSans:							'Open Sans', sans-serif;



$arial:								Arial, sans-serif;
$lemon:								'Lemon', cursive;

/* Grid */

$gridUnit:							15px;

/* Mix-ins & Functions */

@import								'lib/animation';
@import								'lib/flexbox';

%clearfix {
	&:after {
		clear: 						both;
		content:					'';
		display: 					block;
	}
	html.ie7 & {
		zoom: 						1;
	}
}

@function calc-percent($target, $container) {
  @return ($target / $container) * 100%;
}

@mixin respond-to($upperBreakPoint, $lowerBreakPoint : 0){
	@if $lowerBreakPoint > 0 {
		@media only screen and (max-width: $upperBreakPoint) and (min-width: 
$lowerBreakPoint + 1) { 
			@content;
        }
    }
    @else {
        @media only screen and (max-width: $upperBreakPoint) {
            @content;
        }
    }
}

@mixin retina {
    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) { 
		@content;
	}
}